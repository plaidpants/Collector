Program TestGrayScale(input,Output);  {$U Jim Surine:Programming:Units:My Units:Dialogs} {$U Jim Surine:Programming:Units:My Units:Patterns} {$U Jim Surine:Programming:Units:My Units:Axis2} {$U Jim Surine:Programming:Units:My Units:RecordInteger} {$U Jim Surine:Programming:Units:My Units:RecordLongInt} {$U Jim Surine:Programming:Units:My Units:RecordReal} {$U Jim Surine:Programming:Units:My Units:GrayScale} {$R Jim Surine:Programming:Reasources:Collector.Rsrc} {$I-} {$S+} uses  Memtypes,            {Basic types stanadard} QuickDraw,           {Quickdraw standard} OSIntf,              {Operating system standard} ToolIntf,            {Tools standard} PackIntf,            {Package stuff (List Manager, Decimal to string convert)} sane,                {For Real number conversions} {$S two}   Dialogs, Patterns, Axis2,   {$S three} RecordInteger, RecordLongInt, RecordReal, GrayScale;var    test:integer;    GrayScale : GrayScaleType;    X,Y:Real;    i,j:integer;    Quit:boolean;    Port:windowPtr;    Reply:SFReply;    Number:LongInt;    TheFile:Text;    begin     quit:=false;    GetPort(Port);    with GrayScale.GrayScaleInfo do        begin          DataRangeDomain.top:=100;          DataRangeDomain.bottom:=0;          DataRangeDomain.right:=100;          DataRangeDomain.left:=0;                    TopDataInclude:=true;          BottomDataInclude:=true;          LeftDataInclude:=true;          RightDataInclude:=true;                    HorzDataBins:=20;          VertDataBins:=20;                    DisplayRangeDomain.top:=100;          DisplayRangeDomain.bottom:=0;          DisplayRangeDomain.right:=100;          DisplayRangeDomain.left:=0;                    TopDisplayInclude:=true;          BottomDisplayInclude:=true;          LeftDisplayInclude:=true;          RightDisplayInclude:=true;          HorzDisplayBins:=10;          VertDisplayBins:=10;          LowerVerticleBound:=0; {Default grayscale scaling}          UpperVerticleBound:=0;                    Title:='Hello';        end;            InitGrayScale(GrayScale,Port );        while not Quit do        begin            write('enter >');            readln(test);            case test of                0:DrawGrayScale(GrayScale,port);                1:GrayScaleDisplayDialog(GrayScale,port);                2:GrayScaleDataDialog(GrayScale,Port);                3:begin                    Readln(X);                    Readln(Y);                    AddToGrayScale ( GrayScale,X,Y,1,port);                  end;                                  4:                  begin                    Rewrite(TheFile,'Test');                    SaveGrayScaleAsText(GrayScale,Reply,TheFile);                    Close(TheFile);                  end;                5:{LoadGrayScaleAsText(GrayScale,Reply,input)};                6:                    begin                        GotoXY(1,1);                        EraseRect(Port^.PortRect);                    end;                7:begin                    Readln(Number);                    for i:=1 to Number do                        begin                            X:= abs(Random/MaxInt*50)+abs(Random/MaxInt*50);                            Y:= abs(Random/MaxInt*50)+abs(Random/MaxInt*50);                            AddToGrayScale(GrayScale,x,y,1,port);                        end;                  end;                                  8:Quit:=True;                otherwise                     OKDialog('hello');            end;        end;    CloseGrayScale(GrayScale);end.